@charset "UTF-8";*{padding:0;margin:0;border:0}*,:after,:before{-webkit-box-sizing:border-box;box-sizing:border-box}:active,:focus,a:active,a:focus{outline:0}aside,footer,header,nav{display:block}body,html{height:100%;width:100%;line-height:1;font-size:14px;-ms-text-size-adjust:100%;-moz-text-size-adjust:100%;-webkit-text-size-adjust:100%}button,input,textarea{font-family:inherit}input::-ms-clear{display:none}button{cursor:pointer}button::-moz-focus-inner{padding:0;border:0}a,a:hover,a:visited{text-decoration:none}ul li{list-style:none}img{vertical-align:top}h1,h2,h3,h4,h5,h6{font-size:inherit;font-weight:400}html{scroll-behavior:smooth}.container{margin:0 auto;max-width:1300px;padding:0 5px}._img{position:relative;overflow:hidden}._img img{width:100%;height:100%;-o-object-fit:cover;object-fit:cover;position:absolute;top:0;left:0}.title{font:25px "Rubik Glitch";text-align:center;color:#fff;text-transform:uppercase}.sub-title{font:15px "Russo One",sans-serif;color:#fff}.burger__body{background:#3bd58d;overflow:hidden;width:100%;-webkit-transition:ease 1s;-o-transition:ease 1s;transition:ease 1s;position:fixed;z-index:6;top:0}.burger__content{position:relative;z-index:15;padding:60px 10px 10px 20px;height:100%;overflow-y:auto;overflow-x:hidden}.burger__content .nav__link a{color:#000;font-size:20px}.burger__trigger{display:none}.header{background:#3bd58d;position:relative;width:100%;height:60px}.header__content{max-width:1000px;height:100%;margin:0 auto;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.header__logo{position:relative;z-index:10;-webkit-box-flex:1;-ms-flex-positive:1;flex-grow:1}.header__logo img{width:40px}.header__nav{-webkit-box-flex:2;-ms-flex-positive:2;flex-grow:2}.header__nav-list{display:-webkit-box;display:-ms-flexbox;display:flex;height:100%;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between}.header__nav-item{position:relative;min-width:200px;max-height:100px;-webkit-box-align:center;-ms-flex-align:center;align-items:center;text-align:center}.header__nav-sub-menu{display:block;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;width:100%}.header__nav-sub-item{height:30px;background:#707070}.header__nav-sub-item:hover{background:#b8b8b8;cursor:pointer}.header__nav-link{display:block;font-size:20px;color:#000;width:100%;line-height:60px;-webkit-transition:all .3s linear;-o-transition:all .3s linear;transition:all .3s linear}.header__nav-link:hover{background:rgba(80,80,80,.303)}.intro,.intro__content{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column}.intro{width:100%;height:100vh;background:url(/img/intro.png) center/cover no-repeat;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center}.intro__content{-webkit-box-align:center;-ms-flex-align:center;align-items:center}.intro__title{font-size:30px}.intro__button{cursor:pointer;margin-top:50px}.intro__button svg{-webkit-transition:all .3s ease-in-out;-o-transition:all .3s ease-in-out;transition:all .3s ease-in-out;fill:#fff;width:80px;height:80px}.intro__button svg:hover{-webkit-transform:translateY(10px);-ms-transform:translateY(10px);transform:translateY(10px)}.card__content-first{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column}.sub-title-first{max-width:300px}.card__item-first .card__img{width:100%;height:561px}.card__title{padding:85px 0}.card__content{padding:85px 0;max-width:1301px;background:rgba(15,15,15,.72)}.card__sub-title{max-width:900px;text-align:center;margin:0 auto 85px}.sub-title-reasons{text-align:left}.card__items{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;gap:20px;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.card__item{width:100%;margin:0 auto}.card__item-title{font:20px "Russo One",sans-serif;text-align:center;padding-top:10px;color:#fff}.card__img{width:100%;height:317px;border:10px solid #fff;border-radius:5px}.sub-title__list{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-align:start;-ms-flex-align:start;align-items:flex-start;gap:20px}.list__item{display:inline-block;position:relative;margin-left:50px;text-align:left}.list__item .list__item-arrow{position:absolute;left:-50px;top:-13px}.list__item svg{fill:#fff;-webkit-transform:rotate(-90deg);-ms-transform:rotate(-90deg);transform:rotate(-90deg)}.footer{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;height:100vh}.footer__title{font-size:40px}.main{background:url(/img/background3.jpg) center}@supports (-webkit-appearance:none){.intro{background:url(/img/intro.webp) center/cover no-repeat}.main{background:url(/img/background3.webp) center}}@media (min-width:479.98px){.intro__title{font-size:50px}.card__item{width:430px}.card__items{-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-direction:row;flex-direction:row;-ms-flex-wrap:wrap;flex-wrap:wrap;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;max-width:1090px;margin:0 auto}.card__title{font-size:40px}.card__sub-title{font-size:20px}}@media (min-width:767.98px){.card__content-first{-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-direction:row;flex-direction:row;-webkit-box-align:center;-ms-flex-align:center;align-items:center;gap:50px}}@media (min-width:999.98px){.header__nav-sub-menu{position:absolute;display:none}.header__nav-item:hover .header__nav-sub-menu{display:-webkit-box;display:-ms-flexbox;display:flex}.intro__title{font-size:70px}}@media (max-width:999.98px){.burger__trigger:before{top:0;width:30px;height:3px;background-color:#000}.burger__trigger span{display:block;margin-top:8px}.active:before,.burger__trigger:after,.burger__trigger:before{content:"";display:block;-webkit-transition:all .3s ease;-o-transition:all .3s ease;transition:all .3s ease}.burger__trigger span,.burger__trigger:after{position:absolute;width:30px;height:3px;background-color:#000}.burger__trigger:after{bottom:0}.active{cursor:pointer;width:25px;height:25px;-webkit-transition:all .1s ease;-o-transition:all .1s ease;transition:all .1s ease}.active:before{top:0;-webkit-transform:rotateZ(-45deg);-ms-transform:rotate(-45deg);transform:rotateZ(-45deg);margin-top:9px}.active span,.burger__trigger{display:block;position:absolute}.active span,.active:after,.active:before{width:30px;height:3px;background-color:#000}.active span{margin-top:12px;opacity:0}.active:after{content:"";display:block;position:absolute;bottom:0;-webkit-transform:rotateZ(45deg);-ms-transform:rotate(45deg);transform:rotateZ(45deg);margin-bottom:13px;-webkit-transition:all .3s ease;-o-transition:all .3s ease;transition:all .3s ease}.burger__trigger{cursor:pointer;width:25px;height:25px;z-index:12;right:5%;top:30%}.header__nav-list{display:block;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.header__logo{-webkit-box-flex:0;-ms-flex-positive:0;flex-grow:0}.header__nav-item{margin-bottom:15px;width:100%;max-height:500px}.header__nav{display:none}.header__nav-sub-menu,.sub-menu-active{-webkit-transition:all .5s ease;-o-transition:all .5s ease;transition:all .5s ease}.header__nav-sub-menu{position:static;max-height:0;overflow:hidden}.sub-menu-active{max-height:500px}}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */